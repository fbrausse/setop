%{
/* tlex.l
 *
 * generate lexer via
 *     $ flex tlex.l
 *
 * template by
 * <https://en.wikipedia.org/w/index.php?title=GNU_bison&oldid=675382675>
 */

#include <stdio.h>
#include "tnode.h"
#include "tparse.h"
%}

%option outfile="tlex.c" header-file="tlex.h"
%option warn nodefault
%option reentrant noyywrap never-interactive nounistd
%option bison-bridge

CUP		"\\cup"
CAP		"\\cap"
SETMINUS	"\\setminus"
OPLUS		"\\oplus"
WS		[ \r\n\t]

LIT_DQ		'"([^\"]*|\\.)*"'
LIT_SQ		"'[^']*'"

NUM		[0-9]+

%%

{WS}+				{ /* skip blanks */ }
[A-Z]				{ yylval->cval = yytext[0]; return TOKEN_ID; }
[a-z]				{ yylval->cval = yytext[0]; return TOKEN_VAR; }
{NUM}				{ yylval->ival = atoi(yytext); return TOKEN_NUM; }
[,:(){}<>=!]			{ return yytext[0]; }
"|"|{CUP}{WS}			{ return '|'; }
"&"|{CAP}{WS}			{ return '&'; }
"-"|{SETMINUS}{WS}		{ return '-'; }
"^"|{OPLUS}{WS}			{ return '^'; }
{LIT_DQ}			{ return TOKEN_LIT_DQ; }
{LIT_SQ}			{ return TOKEN_LIT_SQ; }

%%

int yyerror(const char *msg)
{
	fprintf(stderr, "error: %s\n", msg);
	return 0;
}
